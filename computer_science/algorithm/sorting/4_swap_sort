Swap Sort

Kind
	Bubble Sort
	Quick Sort

Algorithm
	Pairwise comparison to be sorted record's sort key, swap inversion records until no inversion pair.

Bubble Sort
	Compare adjacent records and swap adjacent record if not satisfy sort requirement until
	all records in order.

C++ Template
	
	template <class Record>
	void BubbleSort(Record Array[], int n) {
		bool NoSwap;
		int i, j;
		for(i = 0; i < n-1; i++) {
			NoSwap = true;
			for(int j = n-1; j > i; j--) {
				if(Array[j] < Array[j-1]) {
					swap(Array, j, j-1);
					NoSwap = false;
				}
			}

			if(NoSwap)
				return;
		}
	}

Feature
	Stable: only adjacent swap

Space Cost
	O(1): swap's temp varaible

Time Cost
	Minimum Time Cost: O(n)
		Only n-1 times outer cycle.
	
	Maximum Time Cost: O(nn)
		Outer cycle: n-1 times
		Inner cycle at i_th times: n-i times comparison and swap

		The total comparison and swap: 
			SUM(n-i)[1, n-1] = n(n-1)/2 = O(nn)

	Average Time Cost: O(nn)
		Average comparison and swap is half of the maximum: n(n-1)/4 = O(nn)


